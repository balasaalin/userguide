<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="subject-scheme-map">
  <title>Profiling with a Subject Scheme Map</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>DITA<indexterm>Profiling<indexterm>Using subject scheme
            map</indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>A <xref keyref="glossentry_subject-scheme-map"><term>subject scheme map</term></xref> allows
      you to create custom profiling values and to manage the profiling attribute values used in the
      DITA topics without having to write a DITA specialization.</p>
    <p><term>Subject scheme maps</term> use key definitions to define a collection of profiling
      values. A map that uses the set of profiling values must reference the <term>subject scheme
        map</term> in which the profiling values are defined at its highest level. To do this, you
      must add the <codeph>type="subjectScheme"</codeph> attribute on the <codeph>topicref</codeph>
      that references the <term>subject scheme map</term>, as in the following
      example:<codeblock outputclass="language-xml">&lt;topicref href="test.ditamap" format="ditamap" type="subjectScheme"/></codeblock></p>
    <p>A profiled value should be a short and readable keyword that identifies a metadata attribute.
      For example, the <codeph>audience</codeph> metadata attribute may take a value that identifies
      the user group associated with a particular content unit. Typical user values for a
      medical-equipment product line might include <codeph>therapist</codeph>,
        <codeph>oncologist</codeph>, <codeph>physicist</codeph>, <codeph>radiologist</codeph>,
        <codeph>surgeon</codeph>, and so on. A <term>subject scheme map</term> can define a list of
      these audience values.</p>
    <p><b>EXAMPLE:</b></p>
    <p>The following is an example of content from a <term>subject scheme</term>:</p>
    <codeblock outputclass="language-xml">&lt;subjectScheme>
  &lt;!-- Pull in a scheme that defines audience user values -->
  &lt;subjectdef keys="users">
    &lt;subjectdef keys="therapist"/>
    &lt;subjectdef keys="oncologist"/>
    &lt;subjectdef keys="physicist"/>
    &lt;subjectdef keys="radiologist"/>
    &lt;subjectdef keys="surgeon">
      &lt;subjectdef keys="neuro-surgeon"/>
      &lt;subjectdef keys="plastic-surgeon"/>
    &lt;/subjectdef>
  &lt;/subjectdef>
  &lt;!-- Define an enumeration of the audience attribute, equal to
       each value in the users subject. This makes the following values
       valid for the audience attribute: therapist, oncologist, physicist,
       radiologist, surgeon, neuro-surgeon and plastic-surgeon. -->
  &lt;enumerationdef>
    &lt;attributedef name="audience"/>
    &lt;subjectdef keyref="users"/>
  &lt;/enumerationdef>
&lt;/subjectScheme></codeblock>
    <section id="where_the_profiling_attributes_are_available_in">
      <title>Where the Profiling Attributes are Available in <ph keyref="product"/></title>
      <p>When you edit a DITA topic in the <uicontrol>Text</uicontrol> or
          <uicontrol>Author</uicontrol> mode, <ph keyref="product"/> collects all the profiling
        values from the <xref keyref="glossentry_subject-scheme-map"><term>subject scheme
          map</term></xref> that is referenced in the map that is currently opened in the <xref
          href="dita-maps-manager.dita"><uicontrol>DITA Maps Manager</uicontrol></xref> (or set as
        the <xref href="root-map.dita#root-map"><term>root map</term></xref>). The values of
        profiling attribute defined in a <term>Subject Scheme Map</term> are available in the <xref
          href="dita-apply-profiling-attributes.dita#dita-apply-profiling-attributes/edit-profiling-image"
            ><uicontrol>Edit Profiling Attribute</uicontrol> dialog box</xref>, regardless of their
        mapping in the <xref
          href="preferences-profiling-conditions.dita#preferences-profiling-conditions"
            ><uicontrol>Profiling/Conditional Text</uicontrol> preferences page</xref>. They are
        also available as proposals for values in the <xref
          keyref="glossentry_content-completion-assistant"><term>Content Completion
          Assistant</term></xref>.<note>In the example above, the values <codeph>therapist</codeph>,
            <codeph>oncologist</codeph>, <codeph>physicist</codeph>, and so on, are displayed in the
            <term>Content Completion Assistant</term> as values for the <codeph>audience</codeph>
          attribute.</note></p>
    </section>
    <section id="filtering_attribute_values">
      <title>Filtering Attribute Values</title>
      <p>By defining controlled values and using hierarchical levels in the <xref
          keyref="glossentry_subject-scheme-map"><term>subject scheme map</term></xref>, you can
        classify content for filtering and flagging when the map is transformed. You can also filter
        attribute values by using a <xref href="dita-ditaval-file.dita#dita-ditaval-file">DITAVAL
          filter file</xref>.</p>
      <p>For more details about how hierarchical filtering, defining controlled values, and using
          <term>subject scheme maps</term>, refer to the following resources:<ul>
          <li><xref
              href="https://www.oxygenxml.com/dita/1.3/specs/archSpec/base/subject-scheme-maps-and-usage.html"
              format="html" scope="external">DITA 1.3 Specifications: Subject Scheme
            Maps</xref></li>
          <li><xref
            href="https://www.oxygenxml.com/demo/DITA_Subject_Scheme.html"
              format="html" scope="external">Oxygen Video Tutorial: DITA Subject Scheme</xref></li>
        </ul></p>
    </section>
  </body>
  <related-links>
    <linklist><title>Related Information:</title><link href="dita-ditaval-file.dita#dita-ditaval-file"/></linklist>
  </related-links>
</topic>
