<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="ditamap-ms-word">
  <title><?oxy_comment_start author="Steven" timestamp="20170220T144835+0200" comment="Remember to add this new topic to the other 2 ditamaps and add the copy-to attribute."?>DITA
    Map to MS Office Word Transformation<?oxy_comment_end?></title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Transformation Scenarios<indexterm>DITA Map to MS Office
          Word</indexterm></indexterm>
        <indexterm>DITA Map to MS Office Word transformation</indexterm>
        <indexterm>DITA<indexterm>Output<indexterm>DITA Map to MS Office Word
              transformation</indexterm></indexterm></indexterm>
        <indexterm>Transform DITA document to MS Word</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="product"/> comes bundled with a DITA OT plugin that allows you to convert <xref
        keyref="glossentry_ditamap"><term>DITA maps</term></xref> to Microsoft Office Word
      documents.</p>
    <section id="creating_the_transformation_scenario">
      <title>Creating the Transformation Scenario</title>
      <p>To create an <b>DITA Map to MS Office Word</b> transformation scenario, follow these
          steps:<ol id="ol_z3j_gxq_vr">
          <li>Click the <uicontrol><image id="image_d3c_lxq_vr" href="../img/TransformConfig16.png"
              />Configure Transformation Scenario(s)</uicontrol> button<ph
              product="author editor authorEclipse editorEclipse"> from the <xref
                href="dita-maps-manager.dita#dita-maps-manager"><uicontrol>DITA Maps
                  Manager</uicontrol></xref> toolbar</ph>.</li>
          <li>Select <uicontrol>DITA Map MS Office Word</uicontrol>.</li>
          <li>In the <uicontrol>Parameters</uicontrol> tab, configure the following
              parameters:<?oxy_comment_start author="Steven" timestamp="20170220T143601+0200" comment="I&apos;ll wait to add this content until Jarno completes the work on parameters for the plugin"?><ul
              id="ul_uqz_txq_vr">
              <li><codeph>css.processor.path.prince</codeph> (if you are using the <b>Prince Print
                  with CSS</b> processor) - Specifies the path to the Prince executable file that
                will be run to produce the PDF. If you installed Prince using its default settings,
                you can leave this blank.</li>
              <li><codeph>css.processor.path.antenna-house</codeph> (if you are using the <b>Antenna
                  House Formatter</b> processor) - Specifies the path to the Antenna House
                executable file that will be run to produce the PDF. If you installed Antenna House
                using its default settings, you can leave this blank.</li>
              <li><codeph>show.changes.and.comments</codeph> - When set to <codeph>yes</codeph>,
                user comments, replies to comments, and <term>tracked changes</term> are published
                in the PDF output. The default value is <codeph>no</codeph>.</li>
              <li><codeph>dita.css.list</codeph> - Allows you to specify a list of CSS URLs to be
                used by the PDF processor. The files must have URL syntax and be separated using
                  semicolons.<ph product="author editor authorEclipse editorEclipse"> If the value
                  is empty, the current selection from the <uicontrol>Styles</uicontrol> drop-down
                  menu is used.</ph></li>
              <li><codeph>args.css</codeph> - Allows you to specify a list of CSS URLs to be used in
                addition to those specified in the <codeph>dita.css.list</codeph> parameter<ph
                  product="author editor authorEclipse editorEclipse"> OR in addition to the CSS
                  that is currently selected in the <uicontrol>Styles</uicontrol> drop-down menu.
                  The files must have URL syntax and be separated using semicolons. Also, the
                    <codeph>dita.css.list</codeph> parameter must be left empty to use these files
                  in addition to the selection in the <uicontrol>Styles</uicontrol> drop-down
                  menu</ph>.</li>
            </ul><?oxy_comment_end?></li>
          <li>Click <uicontrol>OK</uicontrol> and run the transformation scenario.</li>
        </ol></p>
    </section>
    <section id="customizing_the_styles_for_output_and_editing">
      <title>Customiz<?oxy_comment_start author="Steven" timestamp="20170220T143813+0200" comment="Not sure what other info will be included here. I&apos;ll wait until Radu closes another bug that relates to this."?>ing
        the Styles (for Output and Editing)</title>
      <p>If you need to change the styles in the associated CSS, make sure you install <ph
          keyref="product"/> in a folder where you have full read and write privileges (for
        instance, your user home directory). This is due to the fact that the installed files are
        usually placed in a read-only folder (for instance, in Windows, <ph keyref="product"/> is
        installed in the <filepath>Program Files</filepath> folder where the users do not have
        change rights).</p>
      <?oxy_insert_start author="radu_pisoi" timestamp="20160818T153408+0300"?>
      <p><?oxy_insert_end?>To change the styles of an element you need to create an additional CSS
        file that will store the customization rules. Once you have created this file, you need to
        instruct the editor how to use this additional CSS.<ph
          product="author editor authorEclipse editorEclipse"> This can be done in two
        ways:</ph></p>
      <ul id="ol_smb_pqr_zw">
        <li product="author editor authorEclipse editorEclipse">Create an alternate CSS for the DITA
          document type:<ol>
            <li>Follow the procedure for adding an alternate CSS file in <xref
                href="dg-customize-default-CSS.dita#dg-customize-default-CSS"/>.</li>
            <li>Once you have configured your CSS as an additional layer, you can <xref
                href="selecting-combining-multiple-css-styles.dita#selecting-combining-multiple-css-styles"
                >select it from the <uicontrol>Styles</uicontrol> drop-down menu (on the
                toolbar)</xref>.</li>
            <li>Run the <uicontrol>DITA Map PDF - WYSIWYG</uicontrol> transformation scenario and
              the customization rules from the additional CSS will be visible in the produced
              PDF.</li>
          </ol><p>This method allows you to have many customization CSS files and simply select the
            one that you need at any time for both the output and rendering
              <uicontrol>Author</uicontrol> mode while editing.</p></li>
        <li>Use the <codeph>args.css</codeph> parameter that allows you to specify a list of CSS
          URLs to be used in addition to the <codeph>dita.css.list</codeph> parameter:<ol>
            <li>Configure a <b>DITA map to PDF WYSIWYG</b> transformation scenario, as described in
              the procedure above.</li>
            <li>In the <uicontrol>Parameters</uicontrol> tab, specify the path to your custom CSS
              files in the <codeph>args.css</codeph> parameter.</li>
            <li>Click <uicontrol>OK</uicontrol> and run the transformation scenario.</li>
          </ol><p>This method is appropriate if you just want to apply the styling customization to
            the
          output.</p><?oxy_insert_start author="radu_pisoi" timestamp="20160818T153408+0300"?></li>
      </ul>
      <?oxy_insert_end?>
    </section>
    <section id="using_the_css_inspector_to_see_style_associated_w"
      product="author editor authorEclipse editorEclipse">
      <title>Using the CSS Inspector to See Style Associated with an Element</title>
      <p>To find the styles associated with an element, follow this procedure:<ol>
          <li>Open a document in the editor and select <uicontrol>Inspect Styles</uicontrol> from
            the contextual menu. This opens the <xref
              href="author-css-inspector-view.dita#author-css-inspector-view"><uicontrol>CSS
                Inspector</uicontrol> view</xref> that shows all the CSS rules that apply to the
            selected element.</li>
          <li>Click the particular link for the CSS selector that you need to change and <ph
              keyref="product"/> will open the CSS file and position the cursor at that
            selector.</li>
          <li>After you identify the source of the styles you want to modify, copy the CSS rule in
            your customization CSS file and modify it according to your needs.<p>To see the changes
              in <uicontrol>Author</uicontrol> mode, press <uicontrol
                conkeyref="reusable-oxygen-shortcuts-list/f5"/> to reload the document.</p></li>
        </ol></p>
    </section>
    <section id="how_to_make_remote_resources_appear_in_the_output">
      <title>How to Make Remote Resources Appear in the Output When Using the Prince
        Processor</title>
      <p>If your documentation references external resources (such as images that are stored on a
        Web-based repository) and your system is behind an HTTP(S) proxy, you may find that they do
        not appear in the output when using the <b>Prince Print with CSS</b> processor. To solve
        this, follow this procedure:<ol>
          <li>Edit the <b><filepath>build.xml</filepath></b> file that is located in <filepath><term
                keyref="glossentry_dita_ot_dir"/>/plugins/com.oxygenxml.pdf.css</filepath>.</li>
          <li>There are two instances in the file where a pair of arguments are commented
            out:<codeblock outputclass="language-xml">   &lt;!-- Please remove the comment wrapping the following two arguments
   if you are behind a proxy and your documentation refers remote resources,
   for example images. 
      
   Note: You also need to remove the backslash '\' that appears before the 
   property name: "http-proxy". That backslash is there because a sequence of 
   two dashes ('-') is not permited inside a comment.
   -->
   &lt;!--
     &lt;arg value="-\-http-proxy=${http.proxyHost}:${http.proxyPort}"/>
     &lt;arg value="-\-http-proxy=${https.proxyHost}:${https.proxyPort}"/>
   --></codeblock></li>
          <li>Remove the comment in both instances.</li>
          <li>Make sure you also remove the slash that appears before the property name
              <codeph>http-proxy</codeph> in each instance.<p><b>Step Result:</b> The arguments
              should now look like
              this:<codeblock outputclass="language-xml">  &lt;arg value="--http-proxy=${http.proxyHost}:${http.proxyPort}"/>
  &lt;arg value="--http-proxy=${https.proxyHost}:${https.proxyPort}"/></codeblock></p></li>
          <li>Save the <b><filepath>build.xml</filepath></b> file.</li>
          <li>Run the <term>DITA map to PDF WYSIWYG</term> transformation scenario.<p><b>Result:</b>
              Your external resources should now appear in your output.<?oxy_comment_end?></p></li>
        </ol></p>
    </section>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="edit-scenario-dialog.dita#edit-scenario-dialog"/>
      <link href="configure-transformation-dialog.dita#configure-transformation-dialog"/>
      <link href="ooxml-to-dita.dita#ooxml-to-dita"
        product="author editor authorEclipse editorEclipse"/>
    </linklist>
  </related-links>
</topic>
