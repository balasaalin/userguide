<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="documentation-XSLT-Stylesheet">
  <title>Generating Documentation for an XSLT Stylesheet</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>XSLT<indexterm>Generate documentation for XSLT
          stylesheets</indexterm></indexterm>
        <indexterm>Generate XSLT Stylesheet Documentation tool</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>You can use <ph keyref="product"/> to generate detailed documentation in HTML format for the
      elements (top-level elements whose names are in the XSLT namespace) of an XSLT stylesheet. You
      can select what XSLT elements to include in the generated documentation and also the
      level of details to present for each of them. The elements are hyperlinked. To generate
      documentation in a <xref
        href="custom-documentation-XSLT-Stylesheet.dita#custom-documentation-XSLT-Stylesheet">custom
        output format</xref>, you can edit the XSLT stylesheet used to generate the documentation,
      or create your own stylesheet.</p>
    <p>To open the <uicontrol>XSLT Stylesheet Documentation</uicontrol> dialog box, select
        <uicontrol>XSLT Stylesheet Documentation</uicontrol> from the <menucascade
        product="developer editor">
        <uicontrol>Tools</uicontrol>
        <uicontrol>Generate Documentation</uicontrol>
      </menucascade><menucascade product="developerEclipse editorEclipse">
        <uicontrol>XML Tools</uicontrol>
        <uicontrol>Generate Documentation</uicontrol>
      </menucascade> menu or from the <ph product="developer editor"><uicontrol>Generate
          Documentation</uicontrol> submenu in the contextual menu of the <xref
          href="using-the-project-view.dita#using-the-project-view"><uicontrol>Project</uicontrol>
          view</xref></ph><ph product="developerEclipse editorEclipse"><uicontrol>Generate
          Stylesheet Documentation</uicontrol> action from the contextual menu of the <xref
          href="using-the-project-view.dita#using-the-project-view"><uicontrol>Navigator</uicontrol>
          view</xref></ph>.</p>
    <p>
      <fig id="figure-xslt-doc-dialog-output-panel-oxygen" product="editor developer">
        <title>XSLT Stylesheet Documentation Dialog Box</title>
        <image href="../img/sa_xslt_doc_dialog_output_panel.png"/>
      </fig>
    </p>
    <p>
      <fig id="figure-xslt-doc-dialog-output-panel-oxygenEclipse"
        product="editorEclipse developerEclipse">
        <title>XSLT Stylesheet Documentation Dialog Box</title>
        <image href="../img/ec_xslt_doc_dialog_output_panel.png"/>
      </fig>
    </p>
    <p>The <uicontrol>XSL URL</uicontrol> field of the dialog box must contain the full path to the
      XSL Stylesheet file you want to generate documentation for. The stylesheet may be a local or a
      remote file. You can specify the path to the stylesheet by entering it in the text field, or
      by using the <uicontrol><image href="../img/InsertEditorVariables16.png" id="image_pyh_flb_gs"
        />Insert Editor Variables</uicontrol> button or the options in the <uicontrol><image
          href="../img/BrowseDrop.png" id="image_pmx_flb_gs"/>Browse</uicontrol> drop-down menu.</p>
    <section id="output_tab">
      <title>Output Tab</title>
      <p>The following options are available in the <uicontrol>Output</uicontrol> tab:<ul
          id="ul_gwz_4lb_gs">
          <li><uicontrol>Format</uicontrol> - Allows you to choose between the following formats:<ul
              id="ul_pnl_ztg_gs">
              <li><uicontrol>HTML</uicontrol> - The documentation is generated in <xref
                  href="HTML-documentation-XSLT-Stylesheet.dita#HTML-documentation-XSLT-Stylesheet"
                  >HTML output format</xref>.</li>
              <li><uicontrol>Custom</uicontrol> - The documentation is generated in a <xref
                  href="custom-documentation-XSLT-Stylesheet.dita#custom-documentation-XSLT-Stylesheet"
                  >custom output format</xref>, allowing you to control the output. Click the
                  <uicontrol>Options</uicontrol> button to open a <uicontrol>Custom format
                  options</uicontrol> dialog box where you can specify a custom stylesheet for
                creating the output. There is also an option to <uicontrol>Copy additional resources
                  to the output folder</uicontrol> and you can select the path to the additional
                  <uicontrol>Resources</uicontrol> that you want to copy. You can also choose to
                keep the intermediate XML files created during the documentation process by
                deselecting the <uicontrol>Delete intermediate XML file</uicontrol> option.</li>
            </ul></li>
          <li><uicontrol>Output file</uicontrol> - You can specify the path of the output file by
            entering it in the text field, or by using the <uicontrol><image
                href="../img/InsertEditorVariables16.png" id="image_pdh_bwg_gs"/>Insert Editor
              Variables</uicontrol> button or the options in the <uicontrol><image
                href="../img/BrowseDrop.png" id="image_qdh_bwg_gs"/>Browse</uicontrol> drop-down
            menu.</li>
          <li><uicontrol>Split output into multiple files</uicontrol> - Instructs the application to
            split the output into multiple files. For large XSLT stylesheets, choosing another split
            criterion may generate smaller output files, providing faster documentation browsing.
            You can choose to split them by namespace, location, or component name.</li>
          <li><uicontrol>Open in Browser/System Application</uicontrol> - Opens the result in the
            system application associated with the output file type.<note>To set the browser or
              system application that will be used, <ph product="developer editor"><ph
                  conkeyref="reusables-preferences-pages/open-the-preferences-page"/>, go to
                  <uicontrol>Global</uicontrol>, and set it in the <uicontrol>Default Internet
                  browser</uicontrol> field</ph><ph product="developerEclipse editorEclipse">go to <menucascade>
                  <uicontrol>Window</uicontrol>
                  <uicontrol>Preferences</uicontrol>
                  <uicontrol>General</uicontrol>
                  <uicontrol>Web Browser</uicontrol>
                </menucascade> and specify it there</ph>. This will take precedence over the default
              system application settings.</note></li>
        </ul></p>
    </section>
    <section id="settings_tab">
      <title>Settings Tab</title>
      <p>When you generate documentation for an XSLT stylesheet you can choose what XSLT elements to
        include in the output (templates, functions, global parameters, global variables, attribute
        sets, character maps, keys, decimal formats, output formats, XSLT elements from referenced
        stylesheets) and the details to include in the documentation.</p>
      <p>
        <fig id="figure-xslt-doc-dialog-settings-panel-oxygen" product="editor developer">
          <title>Settings Tab of the XSLT Stylesheet Documentation Dialog Box</title>
          <image href="../img/sa_xslt_doc_dialog_settings_panel.png" id="image_b2t_wyh_gs"/>
        </fig>
      </p>
      <p>
        <fig id="figure-xslt-doc-dialog-settings-panel-oxygenEclipse"
          product="editorEclipse developerEclipse">
          <title>Settings Tab of the XSLT Stylesheet Documentation Dialog Box</title>
          <image href="../img/ec_xslt_doc_dialog_settings_panel.png" id="image_c2t_wyh_gs"/>
        </fig>
      </p>
      <p>The <uicontrol>Settings</uicontrol> tab allows you to choose whether or not to include the
        following components: <uicontrol>Templates</uicontrol>, <uicontrol>Functions</uicontrol>,
          <uicontrol>Global parameters</uicontrol>, <uicontrol>Global variables</uicontrol>,
          <uicontrol>Attribute sets</uicontrol>, <uicontrol>Character maps</uicontrol>,
          <uicontrol>Keys</uicontrol>, <uicontrol>Decimal formats</uicontrol>, <uicontrol>Output
          formats</uicontrol>, <uicontrol>Referenced stylesheets</uicontrol>.</p>
      <p>You can choose whether or not to include the following other details:</p>
      <ul id="ul_l5t_dd3_gs">
        <li><uicontrol>Documentation</uicontrol> - Shows the documentation for each XSLT element.
          For HTML format, the user-defined data elements that are recognized and transformed in
          documentation blocks of the XSLT elements they precede, are the ones from the following
            schemas:<ul id="ul_m5t_dd3_gs">
            <li><ph keyref="product"/> built-in XSLT documentation schema.</li>
            <li>A subset of DocBook 5 elements. The recognized elements are:
                <codeph>section</codeph>, <codeph>sect1</codeph> to <codeph>sect5</codeph>,
                <codeph>emphasis</codeph>, <codeph>title</codeph>, <codeph>ulink</codeph>,
                <codeph>programlisting</codeph>, <codeph>para</codeph>,
              <codeph>orderedlist</codeph>, <codeph>itemizedlist</codeph>.</li>
            <li>A subset of DITA elements. The recognized elements are: <codeph>concept</codeph>,
                <codeph>topic</codeph>, <codeph>task</codeph>, <codeph>codeblock</codeph>,
                <codeph>p</codeph>, <codeph>b</codeph>, <codeph>i</codeph>, <codeph>ul</codeph>,
                <codeph>ol</codeph>, <codeph>pre</codeph>, <codeph>sl</codeph>,
              <codeph>sli</codeph>, <codeph>step</codeph>, <codeph>steps</codeph>,
                <codeph>li</codeph>, <codeph>title</codeph>, <codeph>xref</codeph>.</li>
            <li>Full XHTML 1.0 support.</li>
            <li>XSLStyle documentation environment. XSLStyle uses DocBook or DITA languages inside
              its own user-defined data elements. The supported DocBook and DITA elements are the
              ones mentioned above.</li>
            <li>DOXSL documentation <xref keyref="glossentry_framework"
                ><term>framework</term></xref>. Supported elements are : <codeph>codefrag</codeph>,
                <codeph>description</codeph>, <codeph>para</codeph>, <codeph>docContent</codeph>,
                <codeph>documentation</codeph>, <codeph>parameter</codeph>,
                <codeph>function</codeph>, <codeph>docSchema</codeph>, <codeph>link</codeph>,
                <codeph>list</codeph>, <codeph>listitem</codeph>, <codeph>module</codeph>,
                <codeph>parameter</codeph>, <codeph>template</codeph>,
                <codeph>attribute-set</codeph>;<p>Other XSLT documentation blocks that are not
                recognized will just be serialized inside an HTML <codeph>pre</codeph> element. You
                can change this behavior by using a <xref
                  href="custom-documentation-XSLT-Stylesheet.dita">custom format</xref> instead of
                the built-in <xref href="HTML-documentation-XSLT-Stylesheet.dita">HTML format</xref>
                and providing your own XSLT stylesheets.</p></li>
          </ul></li>
        <li><uicontrol>Use comments</uicontrol> - Controls whether or not the comments that precede
          an XSLT element is treated as documentation for the element they precede. Comments that
          precede or succeed the <codeph>xsl:stylesheet</codeph> element, are treated as
          documentation for the whole stylesheet. Note that comments that precede an import or
          include directive are not collected as documentation for the imported/included module.
          Also, comments from within the body of the XSLT elements are not collected at all.</li>
        <li><uicontrol>Namespace</uicontrol> - Shows the namespace for named XSLT elements.</li>
        <li><uicontrol>Location</uicontrol> - Shows the stylesheet location for each XSLT
          element.</li>
        <li><uicontrol>Parameters</uicontrol> - Shows parameters of templates and functions.</li>
        <li><uicontrol>References</uicontrol> - Shows the named XSLT elements that are referenced
          from within an element.</li>
        <li><uicontrol>Used by</uicontrol> - Shows the list of all the XSLT elements that reference
          the current named element.</li>
        <li><uicontrol>Supersedes</uicontrol> - Shows the list of all the XSLT elements that are
          superseded the current element.</li>
        <li><uicontrol>Overriding</uicontrol> - Shows the list of all the XSLT elements that
          override the current element.</li>
        <li><uicontrol>Return type</uicontrol> - Shows the return type of the function.</li>
        <li><uicontrol>Source</uicontrol> - Shows the text stylesheet source for each XSLT
          element.</li>
        <li><uicontrol>Import precedence</uicontrol> - Shows the computed import precedence as
          declared in the XSL transformation specifications.</li>
        <li><uicontrol>Generate index</uicontrol> - Creates an index with all the XSLT elements
          included in the documentation.</li>
      </ul>
    </section>
    <p><uicontrol>Export settings</uicontrol> - Save the current settings in a settings file for
      further use (for example, with the exported settings file you can generate the same <xref
        href="documentation-XSLT-Stylesheet-command-line.dita">documentation from the command-line
        interface</xref>.)</p>
    <p><uicontrol>Import settings</uicontrol> - Reloads the settings from the exported file.</p>
    <p><uicontrol>Generate</uicontrol> - Use this button to generate the XSLT documentation.</p>
  </body>
  <related-links>
    <linklist><title>Related Information:</title><link href="XSLT-Stylesheet-documentation-support.dita"/></linklist>
  </related-links>
</topic>
