<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="reusables-transforming-documents">
  <title>Reusable Components in Publishing</title>
  <body>
    <p><ph id="intro-for-transformation-tabs">When you <xref
          href="../../topics/defining-new-transformation-scenario.dita#defining-new-transformation-scenario"
          >create a new transformation scenario</xref> or <xref
          href="../../topics/edit-scenario-dialog.dita#edit-scenario-dialog">edit an existing
          one</xref>, a configuration dialog box allows you to customize the transformation with
        various options in several tabs.</ph></p>
    <!--Options in the Setting menu or contextual menu of the Transformation view-->
    <p>
      <dl>
        <dlentry id="show-all-scenarios">
          <dt><uicontrol>Show all scenarios</uicontrol></dt>
          <dd>Select this option to display all the available scenarios, regardless of the document
            they are associated with.</dd>
        </dlentry>
        <dlentry id="scenarios-available-for-editor">
          <dt><uicontrol>Show only the scenarios available for the editor</uicontrol></dt>
          <dd>Select this option to only display the scenarios that <ph keyref="product"/> can apply
            for the current document type.</dd>
        </dlentry>
        <dlentry id="show-associated-scenarios">
          <dt><uicontrol>Show associated scenarios</uicontrol></dt>
          <dd>Select this option to only display the scenarios associated with the document you are
            editing.</dd>
        </dlentry>
        <dlentry id="import-scenarios-dlentry">
          <dt><uicontrol><image href="../../img/ImportScenario16.png"/>Import
            scenarios</uicontrol></dt>
          <dd>This option opens the <uicontrol>Import scenarios</uicontrol> dialog box that allows
            you to select the <filepath>scenarios</filepath> file that contains the scenarios you
            want to import. If one of the scenarios you import is identical to an existing scenario,
              <ph keyref="product"/> ignores it. If a conflict appears (an imported scenario has the
            same name as an existing one), you can choose between two options: <ul>
              <li>Keep or replace the existing scenario.</li>
              <li>Keep both scenarios. <note>When you keep both scenarios, <ph keyref="product"/>
                  adds <filepath>imported</filepath> to the name of the imported
                scenario.</note></li>
            </ul></dd>
        </dlentry>
        <dlentry id="export-selected-scenarios">
          <dt><uicontrol><image href="../../img/ImportScenario16.png"/>Export selected
              scenarios</uicontrol></dt>
          <dd>Use this option to export selected scenarios individually. <ph keyref="product"/>
            creates a <filepath>scenarios</filepath> file that contains the scenarios that you
            export. This is useful if you want to share scenarios with others or export them to
            another computer.</dd>
        </dlentry>
        <dlentry id="export-scenarios-dlentry">
          <dt><uicontrol><image href="../../img/ImportScenario16.png"/>Export
            scenarios</uicontrol></dt>
          <dd>Use this option to export scenarios. <ph keyref="product"/> creates a
              <filepath>scenarios</filepath> file that contains the scenarios that you export. This
            is useful if you want to share scenarios with others or export them to another
            computer.</dd>
        </dlentry>
        <dlentry id="show-type">
          <dt><uicontrol>Show Type</uicontrol></dt>
          <dd>Use this option to display the transformation type of each scenario.</dd>
        </dlentry>
        <dlentry id="show-storage">
          <dt><uicontrol>Show Storage</uicontrol></dt>
          <dd>Use this option to display the storage location of the scenarios.</dd>
        </dlentry>
        <dlentry id="group-by-association" product="author developer editor">
          <dt><uicontrol>Group by Association</uicontrol></dt>
          <dd>Select this option to group the scenarios depending on whether or not they are
            associated with the current document.</dd>
        </dlentry>
        <dlentry id="group-by-type">
          <dt><uicontrol>Group by Type</uicontrol></dt>
          <dd>Select this option to group the scenarios by their type.</dd>
        </dlentry>
        <dlentry id="group-by-storage">
          <dt><uicontrol>Group by Storage</uicontrol></dt>
          <dd>Select this option to group the scenarios by their storage location.</dd>
        </dlentry>
        <dlentry id="ungroup-all">
          <dt><uicontrol><image href="../../img/Flat16.png" product="author developer editor"
              />Ungroup all</uicontrol></dt>
          <dd>Select this option to ungroup all the scenarios.</dd>
        </dlentry>
        <dlentry id="reset-layout">
          <dt><uicontrol>Reset Layout</uicontrol></dt>
          <dd>Select this option to restore the default settings of the layout.</dd>
        </dlentry>
      </dl>
    </p>
    <!--Global/Project options-->
    <p id="name-storage-options" product="author developer editor">The upper part of the dialog box
      allows you to specify the <uicontrol>Name</uicontrol> of the transformation scenario and the
      following <uicontrol>Storage</uicontrol> options: <ul>
        <li id="project-options-li"><xref keyref="glossentry_project-options"><uicontrol>Project
              Options</uicontrol></xref> - The scenario is stored in the project file and can be
          shared with other users. For example, if your project is saved on a source
          versioning/sharing system (CVS, SVN, Source Safe, etc.) or a shared folder, your team can
          use the scenarios that you store in the project file.</li>
        <li id="global-options-li"><xref keyref="glossentry_global-options"><uicontrol>Global
              Options</uicontrol></xref> - The scenario is saved in the global options that are
          stored in the user home directory and is not accessible to other users.</li>
      </ul>
    </p>
    <!--The Output tab-->
    <p>
      <dl id="output-tab-dl">
        <dlentry id="prompt-for-file">
          <dt><uicontrol>Prompt for file</uicontrol></dt>
          <dd>At the end of the transformation, a file browser dialog box is displayed for
            specifying the path and name of the file that stores the transformation result.</dd>
        </dlentry>
        <dlentry id="output-tab-save-as">
          <dt><uicontrol>Save As</uicontrol></dt>
          <dd>The path of the file where the result of the transformation is stored. <ph
              conkeyref="reusables-user-guide/specify-path-without-drop-down"/></dd>
        </dlentry>
        <dlentry id="open-in-browser">
          <dt><uicontrol>Open in Browser/System Application</uicontrol></dt>
          <dd>If selected, <ph keyref="product"/> automatically opens the result of the
            transformation in a system application associated with the file type of the result (for
            example, in Windows <i>PDF</i> files are often opened in <i>Acrobat Reader</i>).
              <note>To set the web browser that is used for displaying HTML/XHTML pages, <ph
                product="author developer editor">go to <menucascade>
                  <uicontrol>Options</uicontrol>
                  <uicontrol>Preferences</uicontrol>
                  <uicontrol>Global</uicontrol>
                </menucascade>, and set it in the <uicontrol>Default Internet browser</uicontrol>
                field</ph><ph product="authorEclipse developerEclipse editorEclipse">go to <menucascade>
                  <uicontrol>Window</uicontrol>
                  <uicontrol>Preferences</uicontrol>
                  <uicontrol>General</uicontrol>
                  <uicontrol>Web Browser</uicontrol>
                </menucascade> and specify it there</ph>. <p>
                <ul>
                  <li><uicontrol>Output file</uicontrol> - When <uicontrol>Open in Browser/System
                      Application</uicontrol> is selected, you can use this button to automatically
                    open the default output file at the end of the transformation.</li>
                  <li><uicontrol>Other location</uicontrol> - When <uicontrol>Open in Browser/System
                      Application</uicontrol> is selected, you can use this option to open the file
                    specified in this field at the end of the transformation. <ph
                      id="specify-path-without-drop-down"
                      product="author developer editor authorEclipse developerEclipse editorEclipse"
                      >You can specify the path by using the text field, the <xref
                        href="../../topics/editor-variables.dita#editor-variables"><uicontrol><image
                            href="../../img/InsertEditorVariables16.png"/>Insert Editor
                          Variables</uicontrol></xref> button, or the <uicontrol><image
                          href="../../img/Open16.png"/>Browse</uicontrol> button.</ph></li>
                </ul>
              </p>
            </note>
          </dd>
        </dlentry>
        <dlentry id="output-tab-open-in-editor">
          <dt><uicontrol>Open in editor</uicontrol></dt>
          <dd>When this is option is selected, at the end of the transformation, the default output
            file is opened in a new editor panel with the appropriate built-in editor type (for
            example, if the result is an XML file it is opened in the built-in XML editor, or if it
            is an XSL-FO file it is opened with the built-in FO editor).</dd>
        </dlentry>
        <dlentry id="show-in-results-view-li">
          <dt><uicontrol>Show in results view as</uicontrol></dt>
          <dd>You can choose to view the results in one of the following:<ul>
              <li id="output-tab-show-as-xml"><uicontrol>XML</uicontrol> - If this is selected, <ph
                  keyref="product"/> displays the transformation result in an XML viewer panel at
                the bottom of the application window with <xref keyref="preferences-colors-sh"
                  >syntax highlighting</xref>.</li>
              <li product="editor author developer" id="output-tab-show-as-svg"
                    ><ph><uicontrol>SVG</uicontrol> - If this is selected, <ph keyref="product"/>
                  displays the transformation result in an <xref
                    href="../../topics/preview-result-pane.dita#preview-result-pane">integrated SVG
                    viewer in the <uicontrol>Results</uicontrol> panel</xref> at the bottom of the
                  application window and renders the result as an SVG image</ph>.</li>
              <li id="show-as-XHTML"><ph><uicontrol>XHTML</uicontrol> - This option is only
                  available if <uicontrol>Open in Browser/System Application</uicontrol> is not
                  selected. If selected, <ph keyref="product"/> displays the transformation result
                  in a built-in XHTML browser panel at the bottom of the application
                  window.</ph><note type="important"><ph>When transforming very large documents, you
                    should be aware that selecting this option may result in very long processing
                    times. This drawback is due to the built-in Java XHTML browser implementation.
                    To avoid delays for large documents, if you want to see the XHTML result of the
                    transformation, you should use an external browser by selecting the
                      <uicontrol>Open in Browser/System Application</uicontrol> option
                    instead.</ph><ul id="image-urls-are-relative-to">
                    <li><uicontrol>Image URLs are relative to</uicontrol> - If <uicontrol>Show in
                        results view as XHTML</uicontrol> is selected, this option specifies the
                      path used to resolve image paths contained in the transformation result. <ph
                        conkeyref="reusables-user-guide/specify-path-without-drop-down"/></li>
                  </ul></note></li>
            </ul></dd>
        </dlentry>
      </dl>
    </p>
    <!--Edit Scenario Advanced Tab-->
    <p>
      <dl>
        <dlentry id="additional-arguments">
          <dt><uicontrol>Additional arguments</uicontrol></dt>
          <dd>You can specify additional command line arguments to be passed to the transformation
            (such as <parmname>-verbose</parmname>).</dd>
        </dlentry>
        <dlentry id="ant-home">
          <dt><uicontrol>Ant Home</uicontrol></dt>
          <dd>You can choose between the default or custom Ant installation to run the
            transformation. <ph product="author developer editor">The default path can be configured
              in the <xref keyref="ant-preferences">Ant preferences page</xref>.</ph></dd>
        </dlentry>
        <dlentry id="java-home">
          <dt><uicontrol>Java Home</uicontrol></dt>
          <dd>You can choose between the default or custom Java installation to run the
            transformation. The default path is the Java installation that is used by <ph
              keyref="product"/>.</dd>
        </dlentry>
        <dlentry id="dita-jvm-args-dlentry">
          <dt><uicontrol>JVM Arguments</uicontrol></dt>
          <dd>This parameter allows you to set specific parameters for the Java Virtual Machine used
            by Ant. For example, if it is set to <parmname>-Xmx384m</parmname>, the transformation
            process is allowed to use 384 megabytes of memory. When performing a large
            transformation, you may want to increase the memory allocated to the Java Virtual
            Machine. This will help avoid <i>Out of Memory</i> error messages
              (<uicontrol>OutOfMemoryError</uicontrol>).</dd>
        </dlentry>
        <dlentry id="libraries">
          <dt><uicontrol>Libraries</uicontrol></dt>
          <dd>By default, <ph keyref="product"/> adds libraries (as high priority) that are not
            transformation-dependent and also patches for certain DITA Open Toolkit bugs. You can
            use this button to specify additional libraries (<xref keyref="glossentry_jar"
                ><term>JAR</term></xref> files or additional class paths) to be used by the Ant
              transformer.<note type="tip">You can specify the path to the additional libraries
              using wildcards (for example, <codeph>${oxygenHome}/lib/*.jar</codeph>).</note></dd>
        </dlentry>
      </dl>
    </p>
    <!--Saxon-CE limitation note-->
    <p>
      <note id="saxon-ce-execution-limitation">Saxon-CE, being JavaScript-based, was designed to run
        inside a web browser. This means that you will use <ph keyref="product"/> only for
        developing the Saxon-CE stylesheet, leaving the execution part to a web browser. See more
        details about <xref href="http://www.saxonica.com/ce/index.xml" scope="external"
          format="html">executing such a stylesheet on Saxonica's website</xref>.</note>
    </p>
    <!--XML and XSLT transformation note-->
    <p>
      <note id="note-001">If a scenario is already associated with the edited document, selecting
            <uicontrol><image href="../../img/ApplyStyleSheet16.png"/>Apply Transformation
          Scenario(s)</uicontrol> runs the associated scenario automatically. You can check to see
        if transformation scenarios are associated with the edited document by hovering your cursor
        over the <uicontrol><image href="../../img/ApplyStyleSheet16.png"/>Apply Transformation
          Scenario</uicontrol> button. </note>
    </p>
    <!--The XSLT/XQuery Tab-->
    <p>
      <dl>
        <dlentry id="xml-url">
          <dt><uicontrol>XML URL</uicontrol></dt>
          <dd>Specifies the source XML file. <ph conkeyref="reusables-user-guide/specify-path-ph"
              /><ph product="author developer editor"> You can also use the <uicontrol><image
                  href="../../img/Edit16.gif"/>Open in editor</uicontrol> button to open the
              specified file in the editor panel.</ph> This URL is resolved through the catalog
            resolver. If the catalog does not have a mapping for the URL, then the file is used
            directly from its remote location.</dd>
        </dlentry>
      </dl>
    </p>
    <!--Note-->
    <p><ph id="ph-note1-xml-url">If the transformer engine is Saxon 9.x and a custom URI resolver is
        configured in the <xref
          href="../../topics/preferences-advanced-xslt-saxon8.dita#preferences-advanced-xslt-saxon8"
          >advanced Saxon preferences page</xref>, the XML input of the transformation is passed to
        that URI resolver.</ph></p>
    <p>
      <dl>
        <dlentry id="transformer">
          <dt><uicontrol>Transformer</uicontrol></dt>
          <dd>This drop-down menu presents all the transformation engines available to <ph
              keyref="product"/> for performing a transformation. These include the built-in engines
            and <xref href="../../topics/preferences-custom-engines.dita">the external engines
              defined in the Custom Engines preferences page</xref>. The engine you choose is used
            as the default transformation engine. Also, if an XSLT or XQuery document does not have
            an associated validation scenario, this transformation engine is used in the validation
            process (if it provides validation support).</dd>
        </dlentry>
      </dl>
    </p>
    <!--FO Processor Tab-->
    <p>
      <dl>
        <dlentry id="perform-fo-processing">
          <dt><uicontrol>Perform FO Processing</uicontrol></dt>
          <dd>Specifies whether or not an FO processor is applied (either the built-in Apache FOP
            engine or an external engine defined in <uicontrol>Preferences</uicontrol>) during the
            transformation.</dd>
        </dlentry>
        <dlentry id="method">
          <dt><uicontrol>Method</uicontrol></dt>
          <dd>The output format of the FO processing. The available options depend on the selected
            processor type.</dd>
        </dlentry>
        <dlentry id="processor">
          <dt><uicontrol>Processor</uicontrol></dt>
          <dd>Specifies the FO processor to be used for the transformation. It can be the built-in
            Apache FOP processor or an <xref href="../../topics/preferences-fo-processors.dita"
              >external processor</xref>.</dd>
        </dlentry>
      </dl>
      <ul>
        <li id="xml-url-as-input"><uicontrol>XML URL as input</uicontrol> - The FO processor is
          applied to the input XML file.</li>
      </ul>
    </p>
    <!--Actions for managing parameters-->
    <p>
      <dl>
        <dlentry id="new-dlentry">
          <dt><uicontrol>New</uicontrol></dt>
          <dd>Opens the <uicontrol>Add Parameter</uicontrol> dialog box that allows you to add a new
            parameter to the list. You can specify the <uicontrol>Value</uicontrol> of the parameter
            by using the <xref href="../../topics/editor-variables.dita#editor-variables"
                  ><uicontrol><image href="../../img/InsertEditorVariables16.png"/>Insert Editor
                Variables</uicontrol></xref> button or the <uicontrol><image
                href="../../img/Open16.png"/>Browse</uicontrol> button.</dd>
        </dlentry>
        <dlentry id="edit-dlentry">
          <dt><uicontrol>Edit</uicontrol></dt>
          <dd>Opens the <uicontrol>Edit Parameter</uicontrol> dialog box that allows you to change
            the value of the selected parameter or its description.</dd>
        </dlentry>
        <dlentry id="delete-dlentry">
          <dt><uicontrol>Delete</uicontrol></dt>
          <dd>Removes the selected parameter from the list. It is available only for new parameters
            that have been added to the list.</dd>
        </dlentry>
      </dl>
    </p>
    <!--WebHelp documentation systems-->
    <p><ph id="toc-highlight">You can enhance the appearance of items in the <i>Table of
          Contents</i>. See the <xref href="../../topics/customize_webhelp.dita#customize_webhelp"
          >Customizing WebHelp Classic Systems chapter</xref> for more details.</ph></p>
    <!--Comments Section-->
    <p id="comments-1-p">To add a new comment, click the <uicontrol>Add New Comment</uicontrol>
      button, or click <uicontrol>Reply</uicontrol> to add a comment to an existing thread. You can
      click on the <uicontrol>Log in</uicontrol> button on the right side of this bar to be
      authenticated as a user and your user name will be included in any comments that you add. If
      you do not have a user name, you can click on the <uicontrol>Sign Up</uicontrol> button to
      create a new user.</p>
    <p id="comments-2-p">After you log in, your name and user name are displayed in the
        <uicontrol>Comments</uicontrol> bar, along with the <uicontrol>Log off</uicontrol> and
        <uicontrol>Edit</uicontrol> buttons. Click the <uicontrol>Edit</uicontrol> button to open
      the <uicontrol>User Profile</uicontrol> dialog box where you can customize the following
        options:<ul id="ul_ik1_cbf_dr">
        <li><uicontrol>Your Name</uicontrol> - You can use this field to edit the initial name that
          you used to create your user profile.</li>
        <li><uicontrol>Your email address</uicontrol> - You can use this field to edit the initial
          email address that you used to create your profile.</li>
        <li>You can choose to receive an email in the following situations:<ul id="ul_qs2_4dk_vs">
            <li>When a comment is left on a page that you commented on.</li>
            <li>When a comment is left on any topic in the WebHelp Classic system.</li>
            <li>When a reply is left to one of my comments.</li>
          </ul></li>
        <li><uicontrol>New Password</uicontrol> - Allows you to enter a new password for your user
            account.<note>The <uicontrol>Current Password</uicontrol> field from the top of the
              <uicontrol>User Profile</uicontrol> is mandatory if you want to save the changes you
            make. </note></li>
      </ul></p>
    <!--Search feature section-->
    <section id="search_feature">
      <title>WebHelp Search Engine</title>
      <p id="search_tab_webhelp_responsive_intro">When you enter search terms in the
          <uicontrol>Search</uicontrol> field, the results are displayed in a results page. When you
        click on a result, the topic is opened in the main pane and the search results are
        highlighted. The <uicontrol>Search</uicontrol> field also includes an
          <term>autocomplete</term> feature.</p>
      <p id="search_tab_webhelp_classic_intro">When you enter search terms in the
          <uicontrol>Search</uicontrol> field at the top of the help system, the results are
        displayed in the <uicontrol>Search Results</uicontrol> tab in the left section. When you
        click on a result in the <uicontrol>Search Results</uicontrol> tab, that result is displayed
        in the main pane with the search terms highlighted. If you press
            <uicontrol><shortcut>Enter</shortcut></uicontrol> with the <uicontrol>Search</uicontrol>
        field empty, the highlights are removed.</p>
    </section>
    <section id="autocomplete-suggestion-section">
      <title>Autocomplete Suggestions in the Search Text Field</title>
      <p id="autocomplete-suggestions-p">When you are typing in the search text field, proposals are
        presented to help you to compute the search query. The information proposed when you are
        typing is collected from:<ul id="ul_zmq_32s_2z">
          <li>The search queries from the history of the previous searches.</li>
          <li>The titles collected from your documentation.</li>
          <li>Documentation index terms and keywords. For example, in a DITA topic, the keywords and
            index terms are specified in the topic prolog section like
            this:<codeblock outputclass="language-xml">&lt;prolog>
  &lt;metadata>
	&lt;keywords>&lt;indexterm>databases&lt;/indexterm>&lt;/keywords>
	&lt;keyword>installing&lt;/keyword>
	&lt;keyword>uninstalling&lt;/keyword>
    &lt;keyword>prerequisites&lt;/keyword> 
  &lt;/metadata>
&lt;/prolog></codeblock></li>
        </ul></p>
    </section>
    <section id="section_rrm_22s_2z">
      <title>Search Feature</title>
      <p id="webhelp_search_feature">The <uicontrol>Search</uicontrol> feature is also enhanced with
        a rating mechanism that computes scores for every result that matches the search criteria.
        These scores are then translated into a 5-star rating scheme and the stars are displayed to
        the right of each result. The search results are sorted depending on the following:<ul
          id="ul_ely_wvx_cr">
          <li>Search entries that satisfy the phrase search criterion are presented
            first.<?oxy_insert_start author="radu_pisoi" timestamp="20170310T102034+0200"?></li>
          <?oxy_insert_end?>
          <li>The number of keywords found in a single page (the higher the number, the
            better).</li>
          <li>The context (for example, a word found in a title scores better than a word found in
            unformatted text). The search ranking order, sorted by relevance is as follows:<ul
              id="ul_swf_qzg_dr">
              <li>The search term is included in a meta keyword</li>
              <li>The search term is in the title of the page</li>
              <li>The search term is in bold text in a paragraph</li>
              <li>The search term is in normal text in a paragraph</li>
            </ul></li>
        </ul></p>
      <p id="excluded-terms-p">To improve performance, the <uicontrol>Search</uicontrol> feature
        excludes certain <term>stop words</term>. For example, the English version of such
          <term>stop words</term> include: <i>a, an, and, are, as, at, be, but, by, for, if, in,
          into, is, it, no, not, of, on, or, such, that, the, their, then, there, these, they, this,
          to, was, will, with</i>.</p>
      <p id="missing-words-p">If you enter multiple search terms (other than <term>stop
        words</term>), for any result that the search engine found at least one term but not one or
        more of the other terms, the <uicontrol>Missing</uicontrol> terms will be listed below each
        result. </p>
      <p>
        <fig id="fig_srm_22s_2z">
          <title>WebHelp Classic Search Results</title>
          <image href="../../img/WebHelp-search-stemming.png" id="search-webhelp-classic-figure"/>
        </fig>
      </p>
      <p id="whr-search-results-fig">
        <fig>
          <title>WebHelp Responsive Search Results Page</title>
          <image href="../../img/wh_resp_search_page.png"/>
        </fig>
      </p>
      <p id="search_rules_webhelp">Rules that are applied during a search include:<ul
          id="ul_zmy_wvx_cr">
          <li>You can use quotes to perform an exact search for multiple word phrases (for example,
              <i>"grow flowers"</i> will only return results if both words are found consecutively
            and exactly as they are typed in the search field). This type of search is known as a
              <term>phrase search</term>.</li>
          <li><term>Boolean Search</term> is supported using the following operators: <i>and</i>,
              <i>or</i>, <i>not</i>. When there are two adjacent search terms without an operator,
              <i>or</i> is used as the default search operator (for example, <i>grow flowers</i> is
            the same as <i>grow or flowers</i>).</li>
          <li>The space character separates keywords (an expression such as <i>grow flowers</i>
            counts as two separate keywords: <i>grow</i> and <i>flowers</i>).</li>
          <li><codeph>indexterm</codeph> and <codeph>keywords</codeph> DITA elements are an
            effective way to increase the ranking of a page (for example, content inside a
              <i>keywords</i> element weighs more than an <i>H1</i> HTML element).</li>
          <li>Words composed by merging two or more words with colon (":"), minus ("-"), underline
            ("_"), or dot (".") characters count as a single word.</li>
          <li>Always search for words containing three or more characters (shorter words, such as
              <i>to</i> or <i>of</i> are ignored). This rule does not apply to CJK (Chinese,
            Japanese, Korean) languages.</li>
        </ul></p>
      <p id="webhelp_scoring">HTML tag elements are also assigned a scoring value and these values
        are evaluated for the search results. For information about editing these values, see <xref
          href="../../topics/scoring-properties-search-results.dita#scoring-properties-search-results"
        />.</p>
      <p id="webhelp_compatible_browsers">This output format is compatible with the most recent
        versions of the following common browsers:<ul id="ul_rbs_yvx_cr">
          <li>Edge</li>
          <li>Internet Explorer (IE 9 or newer)</li>
          <li>Chrome </li>
          <li>Firefox</li>
          <li>Safari</li>
          <li>Opera</li>
        </ul></p>
      <note type="important" id="chrome_issues">Due to some security restrictions in certain
        browsers (Google Chrome and Internet Explorer), WebHelp Classic pages loaded from the local
        system (through URLs of the <filepath>file:///...</filepath> format) may not work properly.
        We recommend that you load WebHelp Classic pages in Google Chrome or Internet Explorer only
        from a web server (with a URL such as
          <filepath>http://your.server.com/webhelp/index.html</filepath> or
          <filepath>http://localhost/web_pages/index.html</filepath>).</note>
    </section>
    <!--WebHelp reusables-->
    <ul id="webhelp-plugin-outputs">
      <li id="webhelp-classic"><uicontrol>webhelp</uicontrol> - The transformation that produces
          <uicontrol>WebHelp Classic</uicontrol> output for desktop.</li>
      <li id="webhelp-classic-feedback"><uicontrol>webhelp-feedback</uicontrol> - The transformation
        that produces feedback-enabled <uicontrol>WebHelp Classic with Feedback</uicontrol> for
        desktop.</li>
      <li id="webhelp-mobile"><uicontrol>webhelp-mobile</uicontrol> - The transformations that
        produces <uicontrol>WebHelp Classic Mobile</uicontrol> output for mobile devices.</li>
      <li id="webhelp-responsive"><uicontrol>webhelp-responsive</uicontrol> - The transformation
        that produces <uicontrol>WebHelp Responsive</uicontrol> and <uicontrol>WebHelp Responsive
          with Feedback</uicontrol> output for desktop and mobile devices.</li>
    </ul>
    <note id="context-id-note" type="tip">You can use an <xref keyref="glossentry_anchor"
          ><term>anchor</term></xref> in the <codeph>contextId</codeph> parameter to jump to a
      specific section in a document. For example, <codeph>contextId=topicID#anchor</codeph>.</note>
    <ul>
      <li id="contextid-classic"><codeph>contextId</codeph> - The WebHelp JavaScript engine will
        look for this value in the <filepath>context-help-map.xml</filepath> mapping file and load
        the corresponding help page. For more information, see the <xref
          href="../../topics/context-sensitive-help-system.dita#context-sensitive-help-system"
          >Context-Sensitive WebHelp System</xref> topic.<note>You can use an <xref
            keyref="glossentry_anchor"><term>anchor</term></xref> in the <codeph>contextId</codeph>
          parameter to jump to a specific section in a document. For example,
            <codeph>contextId=topicID#anchor</codeph>.</note></li>
      <li id="contextid-resp"><codeph>contextId</codeph> - The WebHelp JavaScript engine will look
        for this value in the <filepath>context-help-map.xml</filepath> mapping file and load the
        corresponding help page. For more information, see the <xref
          href="../../topics/context-sensitive-help-system-resp.dita#context-sensitive-help-system-resp"
          >Context-Sensitive WebHelp System</xref> topic.<note>You can use an <xref
            keyref="glossentry_anchor"><term>anchor</term></xref> in the <codeph>contextId</codeph>
          parameter to jump to a specific section in a document. For example,
            <codeph>contextId=topicID#anchor</codeph>.</note></li>
      <li id="appname-classic"><codeph>appname</codeph> - You can use this parameter in conjunction
        with <codeph>contextId</codeph> to search for this value in the corresponding <xref
          href="../../topics/context-sensitive-help-system.dita#context-sensitive-help-system/appname"
            ><codeph>appname</codeph> attribute value</xref> in the mapping
        file.<codeblock>http://localhost/webhelp/index.html?contextId=topicID&amp;appname=myApplication</codeblock></li>
      <li id="appname-resp"><codeph>appname</codeph> - You can use this parameter in conjunction
        with <codeph>contextId</codeph> to search for this value in the corresponding <xref
          href="../../topics/context-sensitive-help-system-resp.dita#context-sensitive-help-system-resp/appname"
            ><codeph>appname</codeph> attribute value</xref> in the mapping
        file.<codeblock>http://localhost/webhelp/index.html?contextId=topicID&amp;appname=myApplication</codeblock></li>
      <li id="searchquery"><codeph>searchQuery</codeph> - You can use this parameter to perform a
        search operation when WebHelp is loaded. For example, if you want to open WebHelp showing
        all search results for <i>growing flowers</i>, the URL should look like this:
          <filepath>http://localhost/webhelp/index.html?searchQuery=growing%20flowers</filepath>.</li>
    </ul>
    <!--WebHelp plugin installation steps-->
    <p><ph id="step_donwload">Go to <xref
          href="https://www.oxygenxml.com/xml_webhelp/download_oxygenxml_webhelp.html" format="html"
          scope="external"><ph keyref="webhelp"/> website</xref>, download the latest DITA-OT
        version of the installation kit, and unzip it.</ph>
    </p>
    <p><ph id="step_copy_content">Copy all <term>plugin</term> directories from the unpacked archive
        to the <filepath>plugins</filepath> directory of the DITA OT distribution. This is necessary
        to enable certain functionality. For example, the
          <filepath>com.oxygenxml.highlight</filepath> directory adds syntax highlight capabilities
        to your WebHelp output for <codeph>codeblock</codeph> sections that contain source code
        snippets (XML, Java, JavaScript).</ph>
    </p>
    <p><ph id="step_run_integrator">In the home directory of the DITA Open Toolkit, run <codeph>ant
          -f integrator.xml</codeph>.</ph>
    </p>
    <!--Advanced Saxon Transformation Options-->
    <p>
      <dl>
        <dlentry id="xslt-use-config-file">
          <dt><uicontrol>Use a configuration file ("-config")</uicontrol></dt>
          <dd>Sets a Saxon <ph keyref="saxon9FullVersion"/> configuration file that is executed for
            XSLT transformation and validation processes.</dd>
        </dlentry>
        <dlentry product="developer editor developerEclipse editorEclipse" id="xslt-debugger-trace">
          <dt><uicontrol>Debugger trace into XPath expressions (applies to debugging
              sessions)</uicontrol></dt>
          <dd>Instructs the <xref href="../../topics/steps-in-typical-debug-process.dita"
              format="dita">XSLT Debugger</xref> to <i>step into</i> XPath expressions.</dd>
        </dlentry>
        <dlentry id="xslt-version-warnings">
          <dt><uicontrol>Version warnings ("-versmsg")</uicontrol></dt>
          <dd>Warns you when the transformation is applied to an XSLT 1.0 stylesheet.</dd>
        </dlentry>
        <dlentry id="xslt-line-numbering">
          <dt><uicontrol>Line numbering ("-l")</uicontrol></dt>
          <dd>Line numbers where errors occur are included in the output messages.</dd>
        </dlentry>
        <dlentry id="xslt-expand-attributes">
          <dt><uicontrol>Expand attributes defaults ("-expand")</uicontrol></dt>
          <dd>Specifies whether or not the attributes defined in the associated DTD or XML Schema
            are expanded in the output of the transformation you are executing.</dd>
        </dlentry>
        <dlentry id="xslt-dtd-validation">
          <dt><uicontrol>DTD validation of the source ("-dtd")</uicontrol></dt>
          <dd>Specifies whether or not the source document will be validated against their
            associated DTD. You can choose from the following:<ul>
              <li>
                <uicontrol>On</uicontrol> - Requests DTD validation of the source file and of any
                files read using the <codeph>document()</codeph> function.</li>
              <li>
                <uicontrol>Off</uicontrol> - (default setting) Suppresses DTD validation.</li>
              <li>
                <uicontrol>Recover</uicontrol> - Performs DTD validation but treats the errors as
                  non-fatal.<note>Any external DTD is likely to be read even if not used for
                  validation, since DTDs can contain definitions of entities.</note></li>
            </ul></dd>
        </dlentry>
        <dlentry id="xslt-recoverable-errors">
          <dt><uicontrol>Recoverable errors ("-warnings")</uicontrol></dt>
          <dd>Allows you to choose how dynamic errors are handled. The following options can be selected:<ul>
              <li><uicontrol>Recover silently ("silent")</uicontrol> - Continues processing without
                reporting the error.</li>
              <li><uicontrol>Recover with warnings ("recover")</uicontrol> - Issues a warning but
                continues processing.</li>
              <li><uicontrol>Signal the error and do not attempt recovery ("fatal")</uicontrol> -
                Issues an error and stops processing.</li>
            </ul></dd>
        </dlentry>
        <dlentry id="xslt-strip-whitespaces">
          <dt><uicontrol>Strip whitespaces ("-strip")</uicontrol></dt>
          <dd>Allows you to choose how the <i>strip whitespaces</i> operation is handled. You can
            choose one of the following values:<ul>
              <li><uicontrol>All ("all")</uicontrol> - Strips <i>all</i> whitespace text nodes from
                source documents before any further processing, regardless of any
                  <codeph>xml:space</codeph> attributes in the source document.</li>
              <li><uicontrol>Ignore ("ignorable")</uicontrol> - Strips all <i>ignorable</i>
                whitespace text nodes from source documents before any further processing,
                regardless of any <codeph>xml:space</codeph> attributes in the source document.
                Whitespace text nodes are ignorable if they appear in elements defined in the DTD or
                schema as having element-only content.</li>
              <li><uicontrol>None ("none")</uicontrol> - Strips <i>no</i> whitespace before further
                processing.</li>
            </ul></dd>
        </dlentry>
        <dlentry id="xslt-optimization-level">
          <dt><uicontrol>Optimization level ("-opt")</uicontrol></dt>
          <dd>Allows you to set the optimization level. It is the value is an integer in the range
            of 0 (no optimization) to 10 (full optimization). This option allows optimization to be
            suppressed when reducing the compiling time is important, optimization conflicts with
            debugging, or optimization causes extension functions with side-effects to behave
            unpredictably.</dd>
        </dlentry>
        <dlentry id="xslt-register-ce-extension-functions">
          <dt><uicontrol>Register Saxon-CE extension functions and instructions</uicontrol></dt>
          <dd>Registers the Saxon-CE extension functions and instructions when compiling a
            stylesheet using the Saxon <ph keyref="saxon9FullVersion"/> processors.<note
              conkeyref="reusables-transforming-documents/saxon-ce-execution-limitation"
              product="developer editor developerEclipse editorEclipse"/></dd>
        </dlentry>
        <dlentry id="enable-assertions">
          <dt><uicontrol>Enable assertions ("-ea")</uicontrol></dt>
          <dd>In XSLT 3.0, you can use the <b>xsl:assert</b> element to make assertions in the form
            of XPath expressions, causing a dynamic error if the assertion turns out to be false. If
            this option is selected, XSLT 3.0 <codeph>xsl:assert</codeph> instructions are enabled.
            If it is not selected (default), the assertions are ignored. </dd>
        </dlentry>
        <dlentry id="xslt-allow-calls">
          <dt><uicontrol>Allow calls on extension functions ("-ext")</uicontrol></dt>
          <dd>If selected, the stylesheet is allowed to call external Java functions. This does not
            affect calls on integrated extension functions, including Saxon and EXSLT extension
            functions. This option is useful when loading an untrusted stylesheet (such as from a
            remote site using <filepath>http://[URL]</filepath>). It ensures that the stylesheet
            cannot call arbitrary Java methods and thus gain privileged access to resources on your
            machine.</dd>
        </dlentry>
        <dlentry id="xslt-val-source-file">
          <dt><uicontrol>Validation of the source file ("-val")</uicontrol></dt>
          <dd>Requests schema-based validation of the source file and of any files read using
              <codeph>document()</codeph> or similar functions. It can have the following values:<ul>
              <li><uicontrol>Schema validation ("strict")</uicontrol> - This mode requires an XML
                Schema and allows for parsing the source documents with strict schema-validation
                enabled.</li>
              <li><uicontrol>Lax schema validation ("lax")</uicontrol> - If an XML Schema is
                provided, this mode allows for parsing the source documents with schema-validation
                enabled but the validation will not fail if, for example, element declarations are
                not found.</li>
              <li><uicontrol>Disable schema validation</uicontrol> - This specifies that the source
                documents should be parsed with schema-validation disabled.</li>
            </ul></dd>
        </dlentry>
        <dlentry id="xslt-saxon-option-outval">
          <dt><uicontrol>Validation errors in the result tree treated as warnings
              ("-outval")</uicontrol></dt>
          <dd>Normally, if validation of result documents is requested, a validation error is fatal.
            Selecting this option causes such validation failures to be treated as warnings.<p>
              <dl>
                <dlentry>
                  <dt><uicontrol>Write comments for non-fatal validation errors of the result
                      document</uicontrol></dt>
                  <dd>The validation messages for non-fatal errors are written (wherever possible)
                    as a comment in the result document itself.</dd>
                </dlentry>
              </dl>
            </p></dd>
        </dlentry>
        <dlentry id="xslt-generate-bytecode-option">
          <dt><uicontrol>Generate bytecode ("--generateByteCode:(on|off)")</uicontrol></dt>
          <dd>If you select this option, <keyword>Saxon-EE</keyword> attempts to generate Java
            bytecode for evaluation of parts of a query or stylesheet that are amenable to such an
            action. For further details regarding this option, go to <xref
              href="http://www.saxonica.com/documentation9.5/index.html#!javadoc"
              format="html#GENERATE_BYTE_CODE" scope="external"/>.</dd>
        </dlentry>
      </dl>
    </p>
    <!--WebHelp customization misc-->
    <p><ph id="ph-1">Insert the HTML content in a well-formed XML file. There are several things to
        consider in regards to this XML file:</ph><ul>
        <li id="li-1"><b>Well-Formedness</b> - If the file is not a <xref
            href="../../topics/checking-xml-well-formedness.dita#checking-xml-well-formedness"
              ><i>Well-formed XML</i> document</xref> (or fragments are not well-formed), the
          transformation will fail.<p>A common use case is if you want to include several
              <codeph>script</codeph> or <codeph>link</codeph> elements. In this case, the XML
            fragment has multiple root elements and to make it well-formed, you can wrap it in an
              <codeph>html</codeph> element. This element tag will be filtered out and only its
            children will be copied to the output documents. Similarly, you can wrap your content in
              <codeph>head</codeph>, <codeph>body</codeph>, <codeph>html/head</codeph>, or
              <codeph>html/body</codeph> elements.</p></li>
        <li id="li-2"><b>Referencing Resources in the XML File</b> - You can include references to
          local resources (such as JavaScript or CSS files) by using the predefined
            <codeph>${oxygen-webhelp-output-dir}</codeph> macro to specify their paths relative to
          the output
          directory:<codeblock outputclass="language-xml">&lt;html>
  &lt;script type="text/javascript" src="<b>${oxygen-webhelp-output-dir}</b>/js/test.js"/>
  &lt;link rel="stylesheet" type="text/css" 
        href="<b>${oxygen-webhelp-output-dir}</b>/css/test.css" />
&lt;/html></codeblock>To
          copy the referenced resources to the output directory, follow the procedure in: <xref
            href="../../topics/copy_resources.dita#copy_resources"/>.</li>
        <li id="li-2b"><b>Referencing Resources in the XML File</b> - You can include references to
          local resources (such as JavaScript or CSS files) by using the predefined
            <codeph>${oxygen-webhelp-output-dir}</codeph> macro to specify their paths relative to
          the output
            directory:<codeblock outputclass="language-xml">&lt;html>
  &lt;script type="text/javascript" src="<b>${oxygen-webhelp-output-dir}</b>/js/test.js"/>
  &lt;link rel="stylesheet" type="text/css" 
        href="<b>${oxygen-webhelp-output-dir}</b>/css/test.css" />
&lt;/html></codeblock><p>If
            you want that the path of your resource to be relative to the <xref
              href="../../topics/webhelp_template_resources.dita#webhelp_template_resources"
              >templates directory</xref>, you can use the
              <codeph>${oxygen-webhelp-template-dir}</codeph> macro.</p>To copy the referenced
          resources to the output directory, follow the procedure in: <xref
            href="../../topics/copy_resources.dita#copy_resources"/>.</li>
        <li id="li-3"><b>Inline JavaScript or CSS Content</b> - If you want to include inline
          JavaScript or CSS content in the XML file, it is important to place this content inside an
          XML comment, as in the following
            examples:<p>JavaScript:</p><codeblock outputclass="language-xml">&lt;script type="text/javascript">
  <b>&lt;!--</b>
    /* Include JavaScript code here. */
 
    function myFunction() {
      return true;
    }
  <b>--></b>
&lt;/script> </codeblock><p>CSS:</p><codeblock outputclass="language-xml">&lt;style>
  <b>&lt;!--</b> 
    /* Include CSS style rules here. */

    *{
      color:red
    } 
  <b>--></b>
&lt;/style></codeblock></li>
      </ul></p>
  </body>
</topic>
